initSidebarItems({"enum":[["DictionaryBatchOffset",""],["MessageHeader","---------------------------------------------------------------------- The root Message type This union enables us to easily send different message types without redundant storage, and in the future we can easily add new message types."],["MessageOffset",""],["RecordBatchOffset",""]],"fn":[["enum_name_message_header",""],["finish_message_buffer",""],["finish_size_prefixed_message_buffer",""],["get_root_as_message",""],["get_size_prefixed_root_as_message",""]],"struct":[["DictionaryBatch","For sending dictionary encoding information. Any Field can be dictionary-encoded, but in this case none of its children may be dictionary-encoded. There is one vector / column per dictionary, but that vector / column may be spread across multiple dictionary batches by using the isDelta flag"],["DictionaryBatchArgs",""],["DictionaryBatchBuilder",""],["FieldNode","---------------------------------------------------------------------- Data structures for describing a table row batch (a collection of equal-length Arrow arrays) Metadata about a field at some level of a nested type tree (but not its children)."],["Message",""],["MessageArgs",""],["MessageBuilder",""],["MessageHeaderUnionTableOffset",""],["RecordBatch","A data header describing the shared memory layout of a \"record\" or \"row\" batch. Some systems call this a \"row batch\" internally and others a \"record batch\"."],["RecordBatchArgs",""],["RecordBatchBuilder",""]]});